{
    "compilerOptions": {
        "outDir": "lib",
        "target": "ES6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
        "module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */ /* Type declaration files to be included in compilation. */,
        "lib": ["DOM", "ESNext"] /* Specify library files to be included in the compilation. */,
        "jsx": "react-jsx" /* Specify JSX code generation: 'preserve', 'react-native', 'react' or 'react-jsx'. */,
        "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "strict": true /* Enable all strict type-checking options. */,
        "skipLibCheck": true /* Skip type checking of declaration files. */,
        "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
        "resolveJsonModule": true,
        "allowJs": true /* Allow javascript files to be compiled. Useful when migrating JS to TS */,
        "checkJs": true /* Report errors in .js files. Works in tandem with allowJs. */,
        // Ensure that .d.ts files are created by tsc, but not .js files
        "declaration": true,
        "sourceMap": true
    },
    "include": ["src/**/*", "types/**/*"],
    "exclude": ["node_modules", "build"], // *** The files to not type check ***
    "typedocOptions": {
        "entryPoints": [
            // Alphabetically!!
            "src/index.ts",
            "src/controllers/ActionController.ts",
            "src/controllers/AnimationController.ts",
            "src/controllers/CanvasController.ts",
            "src/controllers/CharacterStyleController.ts",
            "src/controllers/ColorStyleController.ts",
            "src/controllers/ConfigurationController.ts",
            "src/controllers/ConnectorController.ts",
            "src/controllers/DebugController.ts",
            "src/controllers/DocumentController.ts",
            "src/controllers/ExperimentController.ts",
            "src/controllers/FontConnectorController.ts",
            "src/controllers/FontController.ts",
            "src/controllers/FrameController.ts",
            "src/controllers/LayoutController.ts",
            "src/controllers/MediaConnectorController.ts",
            "src/controllers/PageController.ts",
            "src/controllers/ParagraphStyleController.ts",
            "src/controllers/SubscriberController.ts",
            "src/controllers/TextStyleController.ts",
            "src/controllers/ToolController.ts",
            "src/controllers/UndoManagerController.ts",
            "src/controllers/UtilsController.ts",
            "src/controllers/VariableController.ts",
            "types/Actions.d.ts",
            "src/types/DocumentTypes.ts",
            "src/types/MediaConnectorTypes.ts"
        ],
        
        "out": "docs",
        "excludePrivate": true
    }
}
