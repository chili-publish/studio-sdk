name: Publish Release
on:
  release:
    types: [released]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PACKAGE_SECRET }}
      - name: Check cache
        id: cache
        uses: actions/cache@v1
        with:
          path: packages/sdk/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}-0
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
      - name: install dependencies
        run: yarn install
      - name: run linting
        run: yarn ci-lint
      - name: run tests
        run: yarn cover
      - name: run readmeUpdater
        run: yarn make-badges
      - name: build code
        run: yarn build
      - name: publish sdk build
        run: |
          # Get the full reference of the release
          ref=${{ github.ref }}
          # Remove the refs/tags/ prefix
          tag=${ref#refs/tags/}
          node cicd.js sdk,connectors yarn publish --tag $tag --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: get new npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: copy file branch
        run: |
          path=packages/sdk/upload/latest
          versionpath=packages/sdk/upload/${{ github.event.release.name }}
          mkdir -p ${path%"/merge"}
          cp -R packages/sdk/_bundles/* ${path%"/merge"}
          mkdir -p ${versionpath%"/merge"}
          cp -R packages/sdk/_bundles/* ${versionpath%"/merge"}

      - name: Copy to Azure Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d sdk -s packages/sdk/upload/ --connection-string "${{ secrets.AZURE_CDN_STUDIO_PRD_CONNECTION_STRING }}" --overwrite true
      - name: prepare for actions upload
        run: |
          node cicd.js actions node scripts/prepare-release.mjs
      - name: Copy to Azure Blob Storage (Actions)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d sdk -s packages/actions/cdn/ --connection-string "${{ secrets.AZURE_CDN_STUDIO_PRD_CONNECTION_STRING }}" --overwrite true
